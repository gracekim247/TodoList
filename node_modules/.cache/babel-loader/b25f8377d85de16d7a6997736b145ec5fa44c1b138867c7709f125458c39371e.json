{"ast":null,"code":"import { createSlice, nanoid } from \"@reduxjs/toolkit\";\nconst todosSlice = createSlice({\n  name: \"todos\",\n  initialState: [],\n  reducers: {\n    addTodo: {\n      reducer(state, action) {\n        state.push(action.payload);\n      },\n      prepare(title) {\n        return {\n          payload: {\n            id: nanoid(),\n            title,\n            completed: false\n          }\n        };\n      }\n    },\n    updateTodo: (state, action) => {\n      const {\n        id,\n        title,\n        completed\n      } = action.payload;\n      const existingTodo = state.find(todo => todo.id === id);\n      if (existingTodo) {\n        existingTodo.title = title;\n        existingTodo.completed = completed;\n      }\n    },\n    deleteTodo: (state, action) => {\n      const {\n        id\n      } = action.payload;\n      return state.filter(todo => todo.id !== id);\n    }\n  }\n});\nexport const {\n  addTodo,\n  updateTodo,\n  deleteTodo\n} = todosSlice.actions;\nexport default todosSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","todosSlice","name","initialState","reducers","addTodo","reducer","state","action","push","payload","prepare","title","id","completed","updateTodo","existingTodo","find","todo","deleteTodo","filter","actions"],"sources":["/Users/gracekim/Desktop/SPEAKHIRE/TodoList-Flashcards/src/features/api/todoslice.js"],"sourcesContent":["import { createSlice, nanoid } from \"@reduxjs/toolkit\";\r\n\r\nconst todosSlice = createSlice({\r\n  name: \"todos\",\r\n  initialState: [],\r\n  reducers: {\r\n    addTodo: {\r\n      reducer(state, action) {\r\n        state.push(action.payload);\r\n      },\r\n      prepare(title) {\r\n        return {\r\n          payload: {\r\n            id: nanoid(),\r\n            title,\r\n            completed: false,\r\n          },\r\n        };\r\n      },\r\n    },\r\n    updateTodo: (state, action) => {\r\n      const { id, title, completed } = action.payload;\r\n      const existingTodo = state.find((todo) => todo.id === id);\r\n      if (existingTodo) {\r\n        existingTodo.title = title;\r\n        existingTodo.completed = completed;\r\n      }\r\n    },\r\n    deleteTodo: (state, action) => {\r\n      const { id } = action.payload;\r\n      return state.filter((todo) => todo.id !== id);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addTodo, updateTodo, deleteTodo } = todosSlice.actions;\r\nexport default todosSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AAEtD,MAAMC,UAAU,GAAGF,WAAW,CAAC;EAC7BG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,OAAO,EAAE;MACPC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;QACrBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;MAC5B,CAAC;MACDC,OAAOA,CAACC,KAAK,EAAE;QACb,OAAO;UACLF,OAAO,EAAE;YACPG,EAAE,EAAEb,MAAM,CAAC,CAAC;YACZY,KAAK;YACLE,SAAS,EAAE;UACb;QACF,CAAC;MACH;IACF,CAAC;IACDC,UAAU,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAM;QAAEK,EAAE;QAAED,KAAK;QAAEE;MAAU,CAAC,GAAGN,MAAM,CAACE,OAAO;MAC/C,MAAMM,YAAY,GAAGT,KAAK,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAKA,EAAE,CAAC;MACzD,IAAIG,YAAY,EAAE;QAChBA,YAAY,CAACJ,KAAK,GAAGA,KAAK;QAC1BI,YAAY,CAACF,SAAS,GAAGA,SAAS;MACpC;IACF,CAAC;IACDK,UAAU,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAM;QAAEK;MAAG,CAAC,GAAGL,MAAM,CAACE,OAAO;MAC7B,OAAOH,KAAK,CAACa,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACL,EAAE,KAAKA,EAAE,CAAC;IAC/C;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER,OAAO;EAAEU,UAAU;EAAEI;AAAW,CAAC,GAAGlB,UAAU,CAACoB,OAAO;AACrE,eAAepB,UAAU,CAACK,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}